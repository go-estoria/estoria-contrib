version: '3.4'

services:
  example-app:
    build:
      context: .
      dockerfile: ./example/Dockerfile
    container_name: example-app
    environment:
      - MONGODB_URI=mongodb://mongo:27017
      - EVENTSTOREDB_URI=esdb://eventstoredb:2113?tls=false
      - EVENTSTOREDB_USERNAME=admin
      - EVENTSTOREDB_PASSWORD=changeit
    networks:
      - example-net
    volumes:
      - .:/repo

  eventstoredb:
    image: eventstore/eventstore:lts
    container_name: eventstoredb
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    ports:
      - "1113:1113"
      - "2113:2113"
    networks:
      - example-net
    volumes:
      - esdb_data:/var/lib/eventstore

  mongo:
    image: bitnami/mongodb:4.4
    container_name: mongo
    environment:
      MONGODB_REPLICA_SET_MODE: primary
      ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - "27017:27017"
    networks:
      - example-net
    volumes:
      - mongo_data:/bitnami/mongodb

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
    ports:
      - "8888:8081"
    depends_on:
      - mongo
    networks:
      - example-net

  s3:
    image: minio/minio
    container_name: s3
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio
    ports:
      - "9000:9000"
    networks:
      - example-net
    volumes:
      - s3_data:/data

networks:
  example-net:
    driver: bridge

volumes:
  esdb_data:
    driver: local
  mongo_data:
    driver: local
  s3_data:
    driver: local
